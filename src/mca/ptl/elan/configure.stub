# -*- shell-script -*-
#
# $HEADER$
#

#
# Main function.  This will be invoked in the middle of the templated
# configure script.
#
AC_DEFUN([MCA_CONFIGURE_STUB],[ 
    AC_CHECK_LIB([rmscall], [rms_getcap], 
	[ompi_elan_have_librmscall=yes], [])

    AC_CHECK_LIB([elan], [elan_init], 
	[ompi_elan_have_libelan=yes], [])

    AC_CHECK_LIB([elan4], [elan4_init], 
	[ompi_elan_have_libelan4=yes], [])

    AC_CHECK_LIB([elan3], [elan3_create],  
	[ompi_elan_have_libelan3=yes], 
	[ompi_elan_nolibelan3=1])

    AC_CHECK_LIB([elanctrl], [elanctrl_open], 
	[ompi_elan_have_libelanctrl=yes], 
	[ompi_elan_nolibelanctrl=1])

    if test "$ompi_elan_have_librmscall" != "yes"  \ 
	-o "ompi_elan_have_libelan" != "yes" \
	-o "ompi_elan_have_libelan4" != "yes" ; then 
	AC_MSG_NOTICE([Cannot support elan4 without librmscall, 
	    libelan and libelan4])
    else
	ELAN_LIBS="-lrmscall -lelan -libelan4"
	ompi_elan_have_elanlibs=yes
    fi

    if test "$ompi_elan_have_libelan3" = "yes"; then
	ELAN_LIBS="$ELAN_LIBS -lelan3"
	test "$ompi_elan_have_elanlibs" = "yes" && ompi_enable_elan="yes"
    elif test "$ompi_elan_have_libelanctrl" = "yes"; then
	ELAN_LIBS="$ELAN_LIBS -lelanctrl"
	test "$ompi_elan_have_elanlibs" = "yes" && ompi_enable_elan="yes"
    else
	AC_MSG_NOTICE([ 
		Cannot support elan4 without libelan3 or libelanctrl!])
    fi 

    if test "$ompi_enable_elan" = yes; then
	AC_ARG_WITH(qsnet2libsrc, 
		AC_HELP_STRING([--with-qsnet2libsrc],
		    [provide the path to qsnet2lib source]))
	echo "path to qsnet2lib source,  ${with_qsnet2libsrc:-no}"
    fi

    if test "${with_qsnet2libsrc+set}" = set; then
	withval="$with_qsnet2libsrc"
	QSNET2LIBSRC=$with_qsnet2libsrc
#	CFLAS="CFLAGS -I$with_qsnet2libsrc/include -I${with_qsnet2libsrc}/include -I${with_qsnet2libsrc}/elan4lib/include -I${with_qsnet2libsrc}/elan4lib/elan4 -I${with_qsnet2libsrc}/elan4lib/common "
    else
	QSNET2LIBSRC=" "
	echo "Cannot support elan4 without a path to qsnet2lib source "
        # Do not exit with error, let it continue
        exit 0
    fi;

    AC_SUBST(QSNET2LIBSRC)
    AC_SUBST(ELAN_LIBS)
])dnl

#
# Since MCA_CONFIGURE_STUB is not invoked when we are configured with
# --enable dist, we provide this alternate macro is that invoked
# instead.  Not all modules will need this -- probably only modules
# thaty use AM_CONDITIONALS will require doing anything here.  If you
# don't need it, you can remove this whole AC_DEFUN.
#
AC_DEFUN([MCA_CONFIGURE_DIST_STUB],[
#
# elan ptl configure-dist.stub
#

# ...probably only need this if have AM_CONDITIONALs in the
# MCA_CONFIGURE_STUB.
echo "Hello from elan configure.stub:MCA-CONFIGURE-DIST-STUB!"

#
# done with elan ptl configure-dist.stub
#
])dnl
