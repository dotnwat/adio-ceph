# -*- shell-script -*-
#
# Copyright (c) 2004-2005 The Trustees of Indiana University.
#                         All rights reserved.
# Copyright (c) 2004-2005 The Trustees of the University of Tennessee.
#                         All rights reserved.
# Copyright (c) 2004-2005 High Performance Computing Center Stuttgart, 
#                         University of Stuttgart.  All rights reserved.
# $COPYRIGHT$
# 
# Additional copyrights may follow
# 
# $HEADER$
#

#
# Main function.  This will be invoked in the middle of the templated
# configure script.
#
AC_DEFUN([MCA_CONFIGURE_STUB],[

    # Additional --with flags that can be specified

    AC_ARG_WITH(rds-resfile-xml2-config,
        AC_HELP_STRING([--with-rds-resfile-xml2-config=EXEC],
                       [Specify the location of xml2-config executable]))

    # Did the user specify where xml2-config is?

    xml2_config=
    if test -n "$with_rds_resfile_xml2_config"; then 
        if test -x "$with_rds_resfile_xml2_config"; then
            xml2_config="$with_rds_resfile_xml2_config"
        elif test -x "$with_rds_resfile_xml2_config/xml2-config"; then
            xml2_config="$with_rds_resfile_xml2_config/xml2-config"
        elif test -x "$with_rds_resfile_xml2_config/bin/xml2-config"; then
            xml2_config="$with_rds_resfile_xml2_config/bin/xml2-config"
        else
            AC_MSG_WARN([$with_rds_resfile_xml2_config does not appear to point to anything close to an xml2-config file])
            AC_MSG_WARN([Going to try to find libxml2 without it...])
        fi
    else
        AC_PATH_PROG(xml2_config, [xml2-config])
        if test -z "$xml2_config"; then
            AC_MSG_WARN([Could not find xml2-config helper script])
            AC_MSG_WARN([Going to try to find libxml2 without it...])
        fi
    fi

    # Add to CPPFLAGS, but only if necessary (note that xml2-config
    # will output -I/path even if /path is already in the default
    # search path of the compiler)

    EXTRA_CPPFLAGS=
    AC_CHECK_HEADER(libxml/parser.h, HAPPY=1, HAPPY=0)
    if test "$HAPPY" = "0"; then
        if test -x "$xml2_config"; then
            AC_MSG_CHECKING([for CPPFLAGS with xml2-config])
            EXTRA_CPPFLAGS="`$xml2_config --cflags`"
            CPPFLAGS="$CPPFLAGS $EXTRA_CPPFLAGS"
            AC_MSG_RESULT([$EXTRA_CPPFLAGS])
            AC_CHECK_HEADER(libxml/tree.h, HAPPY=1, HAPPY=0)
        else
            HAPPY=0
        fi

        if test "$HAPPY" = "0"; then
            AC_MSG_ERROR([Cannot find libxml2 header files])
        fi
    fi

    # Similar to above, add to LDFLAGS only if necessary.

    EXTRA_LDFLAGS=
    AC_CHECK_LIB([xml2], [xmlReadFile], HAPPY=1, HAPPY=0)
    if test "$HAPPY" = "0"; then
        if test -x "$xml2_config"; then
            AC_MSG_CHECKING([for CPPFLAGS with xml2-config])
            EXTRA_LDFLAGS="`$xml2_config --libs`"
            LDFLAGS="$LDFLAGS $EXTRA_LDFLAGS"
            AC_MSG_RESULT([$EXTRA_LDFLAGS])
            AC_CHECK_LIB([xml2], [xmlFreeDoc], HAPPY=1, HAPPY=0)
        else
            HAPPY=0
        fi

        if test "$HAPPY" = "0"; then
            AC_MSG_ERROR([Cannot find libxml2 library])
        fi
    fi
    LIBS="$LIBS -lxml2"
    
    # Save extra compiler/linker flags so that they can be added in
    # the wrapper compilers, if necessary.  Separate out the LIBS from
    # the LDFLAGS (because xml2-config [incorrectly] lumps them all
    # together into one string.

    WRAPPER_EXTRA_LIBS="$LIBS"
    WRAPPER_EXTRA_LDFLAGS=
    for flag in $EXTRA_LDFLAGS; do
	case $flag in
        -l*)
            WRAPPER_EXTRA_LIBS="$WRAPPER_EXTRA_LIBS $flag"
	    ;;
	*) 
            WRAPPER_EXTRA_LDFLAGS="$WRAPPER_EXTRA_LDFLAGS $flag"
	    ;;
	esac
    done
    LIBMPI_EXTRA_LIBS="$WRAPPER_EXTRA_LIBS"
    LIBMPI_EXTRA_LDFLAGS="$WRAPPER_EXTRA_LDFLAGS"
])dnl
